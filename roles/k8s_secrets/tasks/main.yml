---
# K8s Secrets Role - Main Tasks
# This role handles all Kubernetes secret management for CCO credential rotation

- name: Update the aws-creds secret with new credentials
  kubernetes.core.k8s:
    api_version: v1
    kind: Secret
    name: "{{ openshift_aws_creds_secret_name }}"
    namespace: "{{ openshift_aws_creds_secret_namespace }}"
    definition:
      data:
        aws_access_key_id: "{{ new_access_key_id_b64 }}"
        aws_secret_access_key: "{{ new_secret_access_key_b64 }}"
    state: present
    merge_type: merge
  no_log: true

- name: Get all CredentialsRequests for AWS
  kubernetes.core.k8s_info:
    api_version: cloudcredential.openshift.io/v1
    kind: CredentialsRequest
    namespace: "{{ openshift_cco_namespace }}"
  register: credentials_requests

- name: Filter AWS CredentialsRequests
  set_fact:
    aws_credentials_requests: "{{ credentials_requests.resources | selectattr('spec.providerSpec.kind', 'equalto', 'AWSProviderSpec') | list }}"

- name: Extract component secrets info
  set_fact:
    component_secrets_list: "{{ aws_credentials_requests | map(attribute='spec.secretRef') | list }}"

- name: Display component secrets that will be deleted
  debug:
    msg: "Found {{ component_secrets_list | length }} component secrets to delete for CCO rotation"

- name: Delete each component secret to trigger CCO rotation
  kubernetes.core.k8s:
    api_version: v1
    kind: Secret
    name: "{{ item.name }}"
    namespace: "{{ item.namespace }}"
    state: absent
  loop: "{{ component_secrets_list }}"
  when: component_secrets_list | length > 0

- name: Wait for CCO to start recreating secrets
  pause:
    seconds: 10
    prompt: "Waiting for Cloud Credential Operator to detect changes..."

- name: Get CCO deployment
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: cloud-credential-operator
    namespace: "{{ openshift_cco_namespace }}"
  register: cco_deployment

- name: Display CCO status
  debug:
    msg: "CCO deployment status: {{ cco_deployment.resources[0].status.conditions | selectattr('type', 'equalto', 'Available') | map(attribute='status') | first }}"
  when: cco_deployment.resources | length > 0 